# vit_pipeline.py

import os
from scripts.train_segmentor import train_segmentor
from scripts.predict_and_visualize import predict_and_save_masks
from utils.metrics import compute_metrics_for_split
from scripts.config import TEST_LIST_FILE, CHECKPOINT_DIR, PRED_DIR

def run_vit_pipeline(model_name='unet', epochs_seg=15, lr=1e-4, batch_size=32, threshold=0.5):
    pseudo_image_dir = os.path.join(os.getcwd(), "output_vit", "images")
    pseudo_mask_dir  = os.path.join(os.getcwd(), "output_vit", "masks")
    
    print(f"Using pseudo label images from: {pseudo_image_dir}")
    print(f"Using pseudo label masks from: {pseudo_mask_dir}")

    print("Step 1: Training segmentation model using pseudo labels generated by ViT...")
    seg_ckpt = f"{model_name}_vit_seg_{epochs_seg}_epochs.pth"
    train_segmentor(
        model_name=model_name,
        epochs=epochs_seg,
        lr=lr,
        batch_size=batch_size,
        save_path=os.path.join(CHECKPOINT_DIR, seg_ckpt),
        image_dir=pseudo_image_dir,
        mask_dir=pseudo_mask_dir 
    )

    print("\nStep 2: Predicting segmentation masks on test set...")
    predict_and_save_masks(
        model_name=model_name,
        model_path=os.path.join(CHECKPOINT_DIR, seg_ckpt),
        test_list_file=TEST_LIST_FILE,
        threshold=threshold
    )

    print("\nStep 3: Evaluating segmentation results on test set...")
    compute_metrics_for_split('test', PRED_DIR)
